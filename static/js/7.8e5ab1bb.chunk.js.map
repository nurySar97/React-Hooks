{"version":3,"sources":["components/useEffect.js"],"names":["UseEffect","useState","type","setType","data","setData","name","isShow","showData","setShowData","x","y","position","setPosition","useEffect","fetch","then","response","json","mouseMoveHandler","e","clientX","clientY","console","log","window","addEventListener","removeEventListener","className","onClick","style","display","JSON","stringify"],"mappings":"+HA+DeA,UA7DG,WAAO,IAAD,EACIC,mBAAS,SADb,mBACbC,EADa,KACPC,EADO,OAEIF,mBAAS,IAFb,mBAEbG,EAFa,KAEPC,EAFO,OAGYJ,mBAAS,CACrCK,KAAM,YACNC,QAAQ,IALQ,mBAGbC,EAHa,KAGHC,EAHG,OAkBYR,mBAAS,CACrCS,EAAG,EACHC,EAAG,IApBa,mBAkBbC,EAlBa,KAkBHC,EAlBG,KAwBpBC,qBAAU,WACNC,MAAM,wCAAD,OAAyCb,IACzCc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIb,EAAQa,QAC3B,CAAChB,IAGJ,IAAMiB,EAAmB,SAAAC,GACrBP,EAAY,CACRH,EAAGU,EAAEC,QACLV,EAAGS,EAAEE,WAYb,OAPAR,qBAAU,WAGN,OAFAS,QAAQC,IAAI,qBACZC,OAAOC,iBAAiB,YAAaP,GAC9B,kBAAMM,OAAOE,oBAAoB,YAAaR,MACtD,IAIC,sBAAKS,UAAU,6CAAf,UACI,8CACA,6CAAgB1B,KAChB,wBAAQ0B,UAAU,uBAAuBC,QAAS,kBAAM1B,EAAQ,UAAhE,mBACA,wBAAQyB,UAAU,uBAAuBC,QAAS,kBAAM1B,EAAQ,UAAhE,kBACA,wBAAQyB,UAAU,uBAAuBC,QAAS,kBAAM1B,EAAQ,UAAhE,mBAEA,wBAAQyB,UAAU,iBAAiBC,QA7CT,WAC3BrB,EAASD,OACRE,EAAY,CAACH,KAAM,YAAaC,QAAQ,IAExCE,EAAY,CAACH,KAAM,YAAaC,QAAQ,KAyCxC,SAAwEC,EAASF,OACjF,qBAAKwB,MAAO,CAAEC,QAASvB,EAASD,OAAS,QAAU,QAAUqB,UAAU,aAAvE,SAAqFI,KAAKC,UAAU7B,EAAM,KAAM,KAChH,qBAAKwB,UAAU,kBAAf,SAAkCI,KAAKC,UAAUrB,EAAU,KAAM","file":"static/js/7.8e5ab1bb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst UseEffect = () => {\r\n    const [type, setType] = useState('users');\r\n    const [data, setData] = useState([])\r\n    const [showData, setShowData] = useState({\r\n        name: \"Show Data\",\r\n        isShow: false\r\n    })\r\n\r\n\r\n    const showDataToggleHandleClick = () => {\r\n        if(showData.isShow){\r\n            setShowData({name: \"Show Data\", isShow: false})\r\n        }else{\r\n            setShowData({name: \"Hide Data\", isShow: true})\r\n        }\r\n    }\r\n\r\n\r\n    const [position, setPosition] = useState({\r\n        x: 0,\r\n        y: 0\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/${type}`)\r\n            .then(response => response.json())\r\n            .then(json => setData(json))\r\n    }, [type])\r\n\r\n\r\n    const mouseMoveHandler = e => {\r\n        setPosition({\r\n            x: e.clientX,\r\n            y: e.clientY\r\n        })\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log(\"ComponentDidMount\")\r\n        window.addEventListener('mousemove', mouseMoveHandler)\r\n        return () => window.removeEventListener('mousemove', mouseMoveHandler)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='col-12 rounded bg-dark mt-5 p-4 text-light'>\r\n            <h1>2) useEffect</h1>\r\n            <h1>Resourses: {type}</h1>\r\n            <button className=\"btn btn-warning mr-3\" onClick={() => setType(\"users\")}>Users</button>\r\n            <button className=\"btn btn-primary mr-3\" onClick={() => setType(\"todos\")}>Todo</button>\r\n            <button className=\"btn btn-success mr-3\" onClick={() => setType(\"posts\")}>Posts</button>\r\n\r\n            <button className=\"btn btn-danger\" onClick={showDataToggleHandleClick}>{showData.name}</button>\r\n            <pre style={{ display: showData.isShow ? \"block\" : \"none\" }} className=\"text-light\">{JSON.stringify(data, null, 2)}</pre>\r\n            <pre className=\"text-light mt-3\">{JSON.stringify(position, null, 2)}</pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseEffect"],"sourceRoot":""}