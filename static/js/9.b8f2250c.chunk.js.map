{"version":3,"sources":["components/useRef.js"],"names":["UseRef","useState","value","setValue","renderCount","useRef","setFocusToInput","prevValue","useEffect","current","focus","className","ref","type","onChange","e","target","onClick"],"mappings":"+HAkCeA,UA9BA,WAAO,IAAD,EACSC,mBAAS,WADlB,mBACVC,EADU,KACHC,EADG,KAEbC,EAAcC,iBAAO,GACrBC,EAAkBD,iBAAO,MAEzBE,EAAYF,iBAAO,WASvB,OARAG,qBAAU,aACJJ,EAAYK,QACdH,EAAgBG,QAAQC,WAG5BF,qBAAU,WACND,EAAUE,QAAUP,IACrB,CAACA,IAEA,sBAAKS,UAAU,gDAAf,UACI,2CACA,mDAAsBP,EAAYK,WAClC,kDAAqBF,EAAUE,WAC/B,uBACIG,IAAKN,EACLK,UAAU,eACVE,KAAK,OAAOX,MAAOA,EACnBY,SAAU,SAAAC,GAAC,OAAIZ,EAASY,EAAEC,OAAOd,UAErC,wBAAQS,UAAU,uBAAuBM,QAAS,kBAAMX,EAAgBG,QAAQC,SAAhF","file":"static/js/9.b8f2250c.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\n\r\n\r\n\r\nconst UseRef = () => {\r\n    const [value, setValue] = useState('initial')\r\n    let renderCount = useRef(0)\r\n    let setFocusToInput = useRef(null)\r\n\r\n    let prevValue = useRef('initial')\r\n    useEffect(() => {\r\n        ++renderCount.current\r\n        setFocusToInput.current.focus()\r\n    })\r\n\r\n    useEffect(() => {\r\n        prevValue.current = value\r\n    }, [value])\r\n    return (\r\n        <div className='rounded col-12 bg-warning mt-5 p-4 text-light'>\r\n            <h1>3) useRef</h1>\r\n            <h1>Count of Renders {renderCount.current}</h1>\r\n            <h2>Previous Value: {prevValue.current}</h2>\r\n            <input\r\n                ref={setFocusToInput}\r\n                className='form-control'\r\n                type=\"text\" value={value}\r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n            <button className=\"btn btn-success mt-3\" onClick={() => setFocusToInput.current.focus()}>Set Focus To Input</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseRef\r\n"],"sourceRoot":""}